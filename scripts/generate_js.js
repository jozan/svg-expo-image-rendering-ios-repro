const fs = require("fs")
const path = require("path")

function readDirR(dir) {
  return fs.statSync(dir).isDirectory()
    ? Array.prototype.concat(
      ...fs.readdirSync(dir).map((f) => readDirR(path.join(dir, f))),
    )
    : dir
}

const svgFiles = readDirR("./icons").filter((f) => path.extname(f) === ".svg")
const iconsSets = {}

for (const filePath of svgFiles) {
  const filename = path.basename(filePath, ".svg")
  const iconSet = path.basename(path.dirname(filePath))
  const iconSetFile = `./icons/${iconSet}.js`

  if (!iconsSets[iconSetFile]) {
    if (fs.existsSync(iconSetFile)) {
      fs.unlinkSync(iconSetFile)
    }
    iconsSets[iconSetFile] = true
    fs.writeFileSync(
      iconSetFile,
      `// autogenerated\nexport const ${iconSet} = [\n`,
    )
  }

  const iconObject = `{ id: "${filename}", getIcon: () => require("./${iconSet}/${filename}.svg") },\n`
  fs.appendFileSync(iconSetFile, iconObject)
}

for (const iconSetFile of Object.keys(iconsSets)) {
  console.log("iconSetFile", iconSetFile)
  fs.appendFileSync(iconSetFile, "];")
}
